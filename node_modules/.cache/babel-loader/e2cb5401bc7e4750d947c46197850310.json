{"ast":null,"code":"export const GET_USER_REPOS = 'GET USER REPOS';\nexport const GET_USER_COMMITS = 'GET USER COMMITS';\nexport const SELECT_REPO = 'SELECT REPO';\nexport const SUCCESS_USER_REPOS = 'USER REPOS SUCESS';\nexport const FAIL_USER_REPOS = 'USER REPOS FAIL';\nexport const githubActions = {\n  getRepos: ({\n    user\n  }) => ({\n    type: GET_USER_REPOS,\n    payload: {\n      user\n    }\n  }),\n  getCommits: ({\n    repo\n  }) => ({\n    type: GET_USER_COMMITS,\n    payload: {\n      repo\n    }\n  }),\n  setRepoSelecte: ({\n    repo\n  }) => ({\n    type: SELECT_REPO,\n    payload: {\n      repo\n    }\n  }),\n  sucess: data => ({\n    type: SUCCESS_USER_REPOS,\n    payload: data\n  }),\n  fail: error => ({\n    type: FAIL_USER_REPOS,\n    payload: error\n  })\n};","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/redux/actions/github.js"],"names":["GET_USER_REPOS","GET_USER_COMMITS","SELECT_REPO","SUCCESS_USER_REPOS","FAIL_USER_REPOS","githubActions","getRepos","user","type","payload","getCommits","repo","setRepoSelecte","sucess","data","fail","error"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,kBAAkB,GAAG,mBAA3B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,QAAQ,EAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,MAAa;AACnBC,IAAAA,IAAI,EAAGR,cADY;AAEnBS,IAAAA,OAAO,EAAE;AAACF,MAAAA;AAAD;AAFU,GAAb,CADe;AAKzBG,EAAAA,UAAU,EAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,MAAa;AACtBH,IAAAA,IAAI,EAAGP,gBADe;AAEtBQ,IAAAA,OAAO,EAAG;AAACE,MAAAA;AAAD;AAFY,GAAb,CALY;AASzBC,EAAAA,cAAc,EAAG,CAAC;AAACD,IAAAA;AAAD,GAAD,MAAW;AACxBH,IAAAA,IAAI,EAAGN,WADiB;AAExBO,IAAAA,OAAO,EAAG;AAACE,MAAAA;AAAD;AAFc,GAAX,CATQ;AAazBE,EAAAA,MAAM,EAAEC,IAAI,KAAK;AACfN,IAAAA,IAAI,EAAEL,kBADS;AAEfM,IAAAA,OAAO,EAAEK;AAFM,GAAL,CAba;AAiBzBC,EAAAA,IAAI,EAAEC,KAAK,KAAK;AACdR,IAAAA,IAAI,EAAEJ,eADQ;AAEdK,IAAAA,OAAO,EAAEO;AAFK,GAAL;AAjBc,CAAtB","sourcesContent":["export const GET_USER_REPOS = 'GET USER REPOS'\nexport const GET_USER_COMMITS = 'GET USER COMMITS'\nexport const SELECT_REPO = 'SELECT REPO'\nexport const SUCCESS_USER_REPOS = 'USER REPOS SUCESS'\nexport const FAIL_USER_REPOS = 'USER REPOS FAIL'\n\nexport const githubActions = {\n    getRepos: ({user}) => ({\n        type : GET_USER_REPOS,\n        payload: {user}\n    }),\n    getCommits : ({repo}) => ({\n        type : GET_USER_COMMITS,\n        payload : {repo}\n    }),\n    setRepoSelecte : ({repo})=>({\n        type : SELECT_REPO,\n        payload : {repo}\n    }),\n    sucess: data => ({\n      type: SUCCESS_USER_REPOS,\n      payload: data\n    }),\n    fail: error => ({\n      type: FAIL_USER_REPOS,\n      payload: error\n    }),\n  }\n"]},"metadata":{},"sourceType":"module"}