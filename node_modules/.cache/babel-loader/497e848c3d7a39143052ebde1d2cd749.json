{"ast":null,"code":"var _jsxFileName = \"/Users/leticia.costa/WebstormProjects/github-api/src/pages/seachUser/seachUser.js\";\nimport React, { Component } from 'react';\nimport { getUser, getReposList, GET_USER_REPOS } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nclass SearchUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onGetRepos = () => {\n      this.props.onGetRepos(this.state.user);\n    };\n\n    this.setUser = e => {\n      this.setState({\n        user: e.target.value\n      });\n    };\n\n    this.state = {\n      user: ''\n    };\n  }\n\n  render() {\n    const repos = this.props.repos;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Digite o usu\\xE1rio \", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.user,\n      onChange: this.setUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onGetRepos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Pesquisar\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Total \", repos && repos.length, \" \"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Reposit\\xF3rios\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, repos && repos.map(item => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\".concat(this.state.user, \"/\").concat(item.name, \"/commits\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Ver commits\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    repos: getReposList(state),\n    user: getUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onGetRepos(user) {\n    dispatch({\n      type: GET_USER_REPOS,\n      payload: {\n        user\n      }\n    });\n  }\n\n});\n\nexport default connect(state => mapStateToProps, mapDispatchToProps)(SearchUser);","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/pages/seachUser/seachUser.js"],"names":["React","Component","getUser","getReposList","GET_USER_REPOS","connect","SearchUser","constructor","props","onGetRepos","state","user","setUser","e","setState","target","value","render","repos","length","map","item","name","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,EAAgBC,YAAhB,EAA8BC,cAA9B,QAAmD,qBAAnD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAkC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,UAJmB,GAIN,MAAK;AACd,WAAKD,KAAL,CAAWC,UAAX,CAAsB,KAAKC,KAAL,CAAWC,IAAjC;AACH,KANkB;;AAAA,SAOnBC,OAPmB,GAORC,CAAD,IAAO;AACb,WAAKC,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAGE,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACH,KATkB;;AAEf,SAAKN,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAG;AAAT,KAAb;AACH;;AAODM,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKV,KADlB,CACGU,KADH;AAEL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACqB;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrB,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKH,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUS,KAAK,IAAIA,KAAK,CAACC,MAAzB,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,KAAK,IAAIA,KAAK,CAACE,GAAN,CAAWC,IAAD,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,IAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,IAAI,aAAM,KAAKZ,KAAL,CAAWC,IAAjB,cAAyBU,IAAI,CAACC,IAA9B,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAJ,CAFJ,CADM,CADV,CAPJ,CAJJ,CADJ;AAwBH;;AArC6B;;AAwClC,MAAMC,eAAe,GAAGb,KAAK,IAAI;AAC7B,SAAO;AACHQ,IAAAA,KAAK,EAAEf,YAAY,CAACO,KAAD,CADhB;AAEHC,IAAAA,IAAI,EAAGT,OAAO,CAACQ,KAAD;AAFX,GAAP;AAIH,CALD;;AAMA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,UAAU,CAAEE,IAAF,EAAQ;AACdc,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEtB,cADD;AAELuB,MAAAA,OAAO,EAAE;AAAChB,QAAAA;AAAD;AAFJ,KAAD,CAAR;AAIH;;AANmC,CAAL,CAAnC;;AASA,eAAeN,OAAO,CAAEK,KAAD,IACnBa,eADkB,EAElBC,kBAFkB,CAAP,CAGblB,UAHa,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport {getUser,getReposList, GET_USER_REPOS} from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nclass SearchUser extends Component{\n    constructor(props) {\n        super(props)\n        this.state = { user : ''}\n    }\n    onGetRepos = () =>{\n        this.props.onGetRepos(this.state.user)\n    }\n    setUser = (e) => {\n        this.setState({user : e.target.value})\n    }\n    render() {\n        const { repos } = this.props\n        return (\n            <React.Fragment>\n                Digite o usuário <input type='text' value={this.state.user} onChange={this.setUser}/>\n                <button onClick={this.onGetRepos}>Pesquisar</button>\n                <p>Total {repos && repos.length} </p>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>Repositórios</th>\n                        <th></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {repos && repos.map((item)=>(\n                        <tr>\n                            <td>{item.name}</td>\n                            <td><a href={`/${this.state.user}/${item.name}/commits`}>Ver commits</a></td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        repos: getReposList(state),\n        user : getUser(state),\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    onGetRepos (user) {\n        dispatch({\n            type: GET_USER_REPOS,\n            payload: {user}\n        })\n    }\n})\n\nexport default connect((state) =>\n    mapStateToProps,\n    mapDispatchToProps\n)(SearchUser)\n"]},"metadata":{},"sourceType":"module"}