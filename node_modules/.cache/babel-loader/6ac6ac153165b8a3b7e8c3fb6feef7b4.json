{"ast":null,"code":"var _jsxFileName = \"/Users/leticia.costa/WebstormProjects/frontend-github-api/src/pages/seachUser/seachUser.js\";\nimport React, { Component } from 'react';\nimport Title from \"../../components/title/title\";\nimport Container from \"../../components/container\";\nimport Label from \"../../components/label\";\nimport Button from \"../../components/button\";\nimport Input from \"../../components/input/input\";\nimport Table from \"../../components/table\";\nimport Loading from '../../components/loading';\n\nclass SearchUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onGetRepos = () => {\n      this.props.onGetRepos(this.state.user);\n    };\n\n    this.setUser = e => {\n      this.setState({\n        user: e.target.value\n      });\n    };\n\n    this.state = {\n      user: 'LeticiaSoares',\n      isLoading: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('state', state);\n    console.log('props', props);\n\n    if (props.isLoading !== state.isLoading) {\n      return {\n        isLoading: props.isLoading\n      };\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const repos = this.props.repos;\n    console.log('state', this.state);\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Github\"), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" Digite o usu\\xE1rio \"), React.createElement(Input, {\n      type: \"text\",\n      onChange: this.setUser,\n      value: this.state.user,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.onGetRepos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Pesquisar\"), this.state.isLoading ? React.createElement(Loading, {\n      width: '50px',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Total \", repos && repos.length, \" \"), React.createElement(Table, {\n      columns: ['Repositórios', ''],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, repos && repos.map(item => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\".concat(this.state.user, \"/\").concat(item.name, \"/commits\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Commits\")))))));\n  }\n\n}\n\nexport default SearchUser;","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/frontend-github-api/src/pages/seachUser/seachUser.js"],"names":["React","Component","Title","Container","Label","Button","Input","Table","Loading","SearchUser","constructor","props","onGetRepos","state","user","setUser","e","setState","target","value","isLoading","getDerivedStateFromProps","console","log","render","repos","length","map","item","name"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport Title from \"../../components/title/title\";\nimport Container from \"../../components/container\";\nimport Label from \"../../components/label\";\nimport Button from \"../../components/button\";\nimport Input from \"../../components/input/input\";\nimport Table from \"../../components/table\";\nimport Loading from '../../components/loading'\n\nclass SearchUser extends Component{\n    constructor(props) {\n        super(props)\n        this.state = { user : 'LeticiaSoares', isLoading : false}\n    }\n    onGetRepos = () =>{\n        this.props.onGetRepos(this.state.user)\n    }\n    setUser = (e) => {\n        this.setState({user :  e.target.value})\n    }\n    static getDerivedStateFromProps (props, state) {\n        console.log('state',state)\n        console.log('props',props)\n        if (props.isLoading !== state.isLoading) {\n            return {\n                isLoading: props.isLoading\n            }\n        } else {\n            return null\n        }\n    }\n    render() {\n        const { repos } = this.props\n        console.log('state',this.state)\n        return (\n            <Container>\n                <Title>Github</Title>\n                <Label> Digite o usuário </Label>\n                <Input  type='text' onChange={this.setUser}  value={this.state.user} required />\n                <Button onClick={this.onGetRepos}>Pesquisar</Button>\n                {this.state.isLoading ? <Loading  width={'50px'}  /> :  <React.Fragment>\n                    <p>Total {repos && repos.length} </p>\n                    <Table columns={['Repositórios','']}>\n                        {repos && repos.map((item)=>(\n                            <tr>\n                                <td>{item.name}</td>\n                                <td><a href={`/${this.state.user}/${item.name}/commits`}>Commits</a></td>\n                            </tr>\n                        ))}\n                    </Table>\n                </React.Fragment>}\n\n            </Container>\n        )\n    }\n}\n\nexport default SearchUser"]},"metadata":{},"sourceType":"module"}