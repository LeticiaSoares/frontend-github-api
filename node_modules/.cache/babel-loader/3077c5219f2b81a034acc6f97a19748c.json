{"ast":null,"code":"var _jsxFileName = \"/Users/leticia.costa/WebstormProjects/github-api/src/pages/listCommits/listCommits.js\";\nimport React from 'react';\nimport Input from '../../components/input';\nimport Label from '../../components/label';\nimport Title from '../../components/title';\nimport Container from '../../components/container';\n\nclass ListCommits extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilterCommits = e => {\n      const value = e.target.value;\n      const commitsFilters = this.props.commits.filter(item => item.commit.message.toLowerCase().indexOf(value) !== -1);\n      this.setState({\n        filterCommits: commitsFilters\n      });\n    };\n\n    this.state = {\n      filterCommits: ''\n    };\n  }\n\n  render() {\n    const commits = this.state.filterCommits.length > 0 ? this.state.filterCommits : this.props.commits;\n    const className = this.props.className;\n    return React.createElement(Container, {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Reposit\\xF3rio: \", this.props.match.params.repo), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Digite o nome do commit\"), React.createElement(Input, {\n      type: \"text \",\n      onChange: this.onFilterCommits,\n      value: this.state.filter,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      columns: ('Autor', 'Data', 'Mensagem'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Author\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Mensagem\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, commits && commits.map(item => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, item.commit.author.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, item.commit.author.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, item.commit.message))))));\n  }\n\n}\n\nexport default ListCommits;","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/pages/listCommits/listCommits.js"],"names":["React","Input","Label","Title","Container","ListCommits","Component","constructor","props","onFilterCommits","e","value","target","commitsFilters","commits","filter","item","commit","message","toLowerCase","indexOf","setState","filterCommits","state","render","length","className","match","params","repo","map","author","name","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,eANkB,GAMCC,CAAD,IAAM;AACpB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,YAAME,cAAc,GAAI,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,MAAnB,CAA2BC,IAAD,IAC5CA,IAAI,CAACC,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,GAAkCC,OAAlC,CAA0CT,KAA1C,MAAqD,CAAC,CADpC,CAAxB;AAGA,WAAKU,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAGT;AAAlB,OAAd;AACH,KAZiB;;AAEd,SAAKU,KAAL,GAAa;AACTD,MAAAA,aAAa,EAAG;AADP,KAAb;AAGH;;AAQDE,EAAAA,MAAM,GAAE;AACJ,UAAMV,OAAO,GAAG,KAAKS,KAAL,CAAWD,aAAX,CAAyBG,MAAzB,GAAkC,CAAlC,GACT,KAAKF,KAAL,CAAWD,aADF,GAEV,KAAKd,KAAL,CAAWM,OAFjB;AADI,UAIIY,SAJJ,GAIkB,KAAKlB,KAJvB,CAIIkB,SAJJ;AAKJ,WACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqB,KAAKlB,KAAL,CAAWmB,KAAX,CAAiBC,MAAjB,CAAwBC,IAA7C,CADJ,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,EAGI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,QAAQ,EAAE,KAAKpB,eAApC;AAAqD,MAAA,KAAK,EAAE,KAAKc,KAAL,CAAWR,MAAvE;AAA+E,MAAA,QAAQ,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAO,MAAA,OAAO,GAAE,SAAQ,MAAR,EAAe,UAAjB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADA,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,OAAO,IAAIA,OAAO,CAACgB,GAAR,CAAad,IAAD,IACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,MAAL,CAAYc,MAAZ,CAAmBC,IAAxB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,IAAI,CAACC,MAAL,CAAYc,MAAZ,CAAmBE,IAAxB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKjB,IAAI,CAACC,MAAL,CAAYC,OAAjB,CAHJ,CADA,CADZ,CARJ,CAJJ,CADJ;AA0BH;;AA7CqC;;AAgD1C,eAAeb,WAAf","sourcesContent":["import React from 'react'\nimport Input from '../../components/input'\nimport Label from '../../components/label'\nimport Title from '../../components/title'\nimport Container from '../../components/container'\n\nclass ListCommits extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            filterCommits : ''\n        }\n    }\n    onFilterCommits = (e) =>{\n        const value = e.target.value\n        const commitsFilters  = this.props.commits.filter((item)=>(\n              item.commit.message.toLowerCase().indexOf(value) !== -1\n         ))\n        this.setState({ filterCommits : commitsFilters})\n    }\n    render(){\n        const commits = this.state.filterCommits.length > 0\n            ?  this.state.filterCommits\n            : this.props.commits\n        const { className } = this.props\n        return (\n            <Container className={className}>\n                <Title>Reposit√≥rio: {this.props.match.params.repo}</Title>\n                <Label>Digite o nome do commit</Label>\n                <Input  type='text ' onChange={this.onFilterCommits} value={this.state.filter} required />\n                <table columns={'Autor','Data','Mensagem'}>\n                    <thead>\n                    <tr>\n                        <th>Author</th>\n                        <th>Date</th>\n                        <th>Mensagem</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {commits && commits.map((item) => (\n                                <tr>\n                                    <td>{item.commit.author.name}</td>\n                                    <td>{item.commit.author.date}</td>\n                                    <td>{item.commit.message}</td>\n                                </tr>\n                            )\n                    )}\n                    </tbody>\n                </table>\n            </Container>\n        )\n    }\n}\n\nexport default ListCommits"]},"metadata":{},"sourceType":"module"}