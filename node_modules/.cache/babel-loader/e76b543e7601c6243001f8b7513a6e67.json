{"ast":null,"code":"export const GET_USER_REPOS = '[USER REPOS] POST';\nexport const STORE_USER_REPOS = '[USER REPOS] STORE';\nexport const SUCCESS_USER_REPOS = '[USER SUCESS] SUCESS';\nexport const FAIL_USER_REPOS = '[USER REPOS] FAIL';\nexport const githubActions = {\n  getRepos: ({\n    user\n  }) => ({\n    type: GET_USER_REPOS,\n    payload: {\n      user\n    }\n  }),\n  store: data => ({\n    type: STORE_USER_REPOS,\n    payload: data\n  }),\n  fail: error => ({\n    type: FAIL_USER_REPOS,\n    payload: error\n  })\n};\nexport function getUser(state) {\n  const user = state.user;\n  console.log('user', user);\n  return user;\n}\nexport function getReposList(state) {\n  const _state$github = state.github(),\n        repos = _state$github.repos;\n\n  console.log('repos', state);\n  return repos;\n}","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/redux/actions/github-actions.js"],"names":["GET_USER_REPOS","STORE_USER_REPOS","SUCCESS_USER_REPOS","FAIL_USER_REPOS","githubActions","getRepos","user","type","payload","store","data","fail","error","getUser","state","console","log","getReposList","github","repos"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,mBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,oBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,sBAA3B;AACP,OAAO,MAAMC,eAAe,GAAG,mBAAxB;AAEP,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,QAAQ,EAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,MAAa;AACnBC,IAAAA,IAAI,EAAGP,cADY;AAEnBQ,IAAAA,OAAO,EAAE;AAACF,MAAAA;AAAD;AAFU,GAAb,CADe;AAKzBG,EAAAA,KAAK,EAAEC,IAAI,KAAK;AACdH,IAAAA,IAAI,EAAEN,gBADQ;AAEdO,IAAAA,OAAO,EAAEE;AAFK,GAAL,CALc;AASzBC,EAAAA,IAAI,EAAEC,KAAK,KAAK;AACdL,IAAAA,IAAI,EAAEJ,eADQ;AAEdK,IAAAA,OAAO,EAAEI;AAFK,GAAL;AATc,CAAtB;AAeP,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA,QAClBR,IADkB,GACTQ,KADS,CAClBR,IADkB;AAE1BS,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBV,IAAnB;AACA,SAAOA,IAAP;AACF;AAGF,OAAO,SAASW,YAAT,CAAsBH,KAAtB,EAA4B;AAAA,wBACbA,KAAK,CAACI,MAAN,EADa;AAAA,QACvBC,KADuB,iBACvBA,KADuB;;AAE/BJ,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AACA,SAAOK,KAAP;AACH","sourcesContent":["export const GET_USER_REPOS = '[USER REPOS] POST'\nexport const STORE_USER_REPOS = '[USER REPOS] STORE'\nexport const SUCCESS_USER_REPOS = '[USER SUCESS] SUCESS'\nexport const FAIL_USER_REPOS = '[USER REPOS] FAIL'\n\nexport const githubActions = {\n    getRepos: ({user}) => ({\n        type : GET_USER_REPOS,\n        payload: {user}\n    }),\n    store: data => ({\n      type: STORE_USER_REPOS,\n      payload: data\n    }),\n    fail: error => ({\n      type: FAIL_USER_REPOS,\n      payload: error\n    }),\n  }\n\nexport function getUser(state){\n    const { user } = state;\n    console.log('user',user)\n    return user;\n }\n\n\nexport function getReposList(state){\n    const { repos } = state.github();\n    console.log('repos',state)\n    return repos;\n}"]},"metadata":{},"sourceType":"module"}