{"ast":null,"code":"var _jsxFileName = \"/Users/leticia.costa/WebstormProjects/github-api/src/pages/listCommits/listCommits.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { GET_USER_REPOS, getReposList, getRepoSelected, SELECTED_REPO } from \"../../redux/actions\";\n\nclass ListCommits extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilterCommits = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n\n    this.state = {\n      filter: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log('props', this.props.match.params);\n    this.props.onSelectedRepo(this.props.match.params.repo);\n  }\n\n  render() {\n    const _this$props = this.props,\n          commits = _this$props.commits,\n          repo = _this$props.repo;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Reposit\\xF3rio: \", this.props.match.params.repo, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), \"Digite o nome do commit \", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onFilterCommits,\n      value: this.state.filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Commits\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, commits && commits.filter(item => item.name === this.state.filter && React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, item.name))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    commits: getReposList(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onGetRepos(user) {\n    dispatch({\n      type: GET_USER_REPOS,\n      payload: {\n        user\n      }\n    });\n  },\n\n  onSelectedRepo(repo) {\n    dispatch({\n      type: SELECTED_REPO,\n      payload: {\n        repo\n      }\n    });\n  }\n\n});\n\nexport default connect(state => mapStateToProps, mapDispatchToProps)(ListCommits);","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/pages/listCommits/listCommits.js"],"names":["React","connect","GET_USER_REPOS","getReposList","getRepoSelected","SELECTED_REPO","ListCommits","Component","constructor","props","onFilterCommits","e","setState","filter","target","value","state","componentDidMount","console","log","match","params","onSelectedRepo","repo","render","commits","item","name","mapStateToProps","mapDispatchToProps","dispatch","onGetRepos","user","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,eAAtC,EAAuDC,aAAvD,QAA2E,qBAA3E;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,eAXkB,GAWCC,CAAD,IAAM;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAGF,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACH,KAbiB;;AAEd,SAAKC,KAAL,GAAa;AACTH,MAAAA,MAAM,EAAG;AADA,KAAb;AAGH;;AACDI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAArC;AACA,SAAKZ,KAAL,CAAWa,cAAX,CAA0B,KAAKb,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBE,IAAlD;AACH;;AAKDC,EAAAA,MAAM,GAAE;AAAA,wBACqB,KAAKf,KAD1B;AAAA,UACIgB,OADJ,eACIA,OADJ;AAAA,UACYF,IADZ,eACYA,IADZ;AAEJ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACkB,KAAKd,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBE,IAD1C,OACgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhD,8BAE4B;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKb,eAAlC;AAAmD,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWH,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5B,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADA,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCY,OAAO,IAAIA,OAAO,CAACZ,MAAR,CAAgBa,IAAD,IACxBA,IAAI,CAACC,IAAL,KAAc,KAAKX,KAAL,CAAWH,MAAzB,IAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKa,IAAI,CAACC,IAAV,CAD8B,CAD1B,CADZ,CANJ,CAHJ,CADJ;AAoBH;;AArCqC;;AAwC1C,MAAMC,eAAe,GAAGZ,KAAK,IAAI;AAC7B,SAAO;AACHS,IAAAA,OAAO,EAAEtB,YAAY,CAACa,KAAD;AADlB,GAAP;AAGH,CAJD;;AAKA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,UAAU,CAAEC,IAAF,EAAQ;AACdF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE/B,cADD;AAELgC,MAAAA,OAAO,EAAE;AAACF,QAAAA;AAAD;AAFJ,KAAD,CAAR;AAIH,GANmC;;AAOpCV,EAAAA,cAAc,CAAEC,IAAF,EAAQ;AAClBO,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE5B,aADD;AAEL6B,MAAAA,OAAO,EAAE;AAACX,QAAAA;AAAD;AAFJ,KAAD,CAAR;AAIH;;AAZmC,CAAL,CAAnC;;AAeA,eAAetB,OAAO,CAAEe,KAAD,IACfY,eADc,EAEdC,kBAFc,CAAP,CAGbvB,WAHa,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport {GET_USER_REPOS, getReposList, getRepoSelected, SELECTED_REPO} from \"../../redux/actions\";\n\nclass ListCommits extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            filter : ''\n        }\n    }\n    componentDidMount() {\n        console.log('props',this.props.match.params)\n        this.props.onSelectedRepo(this.props.match.params.repo)\n    }\n\n    onFilterCommits = (e) =>{\n        this.setState({ filter : e.target.value})\n    }\n    render(){\n        const { commits,repo } = this.props\n        return (\n            <React.Fragment>\n                Reposit√≥rio: {this.props.match.params.repo} <br></br>\n                Digite o nome do commit <input type='text' onChange={this.onFilterCommits} value={this.state.filter} />\n                <table>\n                    <thead>\n                    <tr>\n                        <th>Commits</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {commits && commits.filter((item)=>(\n                       item.name === this.state.filter && <tr>\n                            <td>{item.name}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        commits: getReposList(state),\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    onGetRepos (user) {\n        dispatch({\n            type: GET_USER_REPOS,\n            payload: {user}\n        })\n    },\n    onSelectedRepo (repo) {\n        dispatch({\n            type: SELECTED_REPO,\n            payload: {repo}\n        })\n    }\n})\n\nexport default connect((state) =>\n        mapStateToProps,\n        mapDispatchToProps\n)(ListCommits)\n"]},"metadata":{},"sourceType":"module"}