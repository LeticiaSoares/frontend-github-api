{"ast":null,"code":"export const GET_USER_REPOS = '[USER REPOS] POST';\nexport const GET_USER_COMMITS = '[COMMITS REPOS] POST';\nexport const SELECTED_REPO = '[REPO] SELECTED';\nexport const STORE_USER_REPOS = '[USER REPOS] STORE';\nexport const SUCCESS_USER_REPOS = '[USER SUCESS] SUCESS';\nexport const FAIL_USER_REPOS = '[USER REPOS] FAIL';\nexport const githubActions = {\n  getRepos: ({\n    user\n  }) => ({\n    type: GET_USER_REPOS,\n    payload: {\n      user\n    }\n  }),\n  getCommits: ({\n    repo\n  }) => ({\n    type: GET_USER_COMMITS,\n    payload: {\n      repo\n    }\n  }),\n  setRepoSelected: ({\n    repo\n  }) => ({\n    type: SELECTED_REPO,\n    payload: {\n      repo\n    }\n  }),\n  store: data => ({\n    type: STORE_USER_REPOS,\n    payload: data\n  }),\n  fail: error => ({\n    type: FAIL_USER_REPOS,\n    payload: error\n  })\n};\nexport function getUser(state) {\n  const user = state.user;\n  console.log('user', user);\n  return user;\n}\nexport function getReposList(state) {\n  const repos = state.github.repos;\n  console.log('repos', repos);\n  return repos;\n}\nexport function getRepoSelected(state) {\n  const selected = state.repos.selected;\n  console.log('selected repo', selected);\n  return selected.repo;\n}\nexport function getCommits(state) {\n  const commits = state.commits;\n  console.log('commits', commits);\n  return commits;\n}","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/redux/actions/github-actions.js"],"names":["GET_USER_REPOS","GET_USER_COMMITS","SELECTED_REPO","STORE_USER_REPOS","SUCCESS_USER_REPOS","FAIL_USER_REPOS","githubActions","getRepos","user","type","payload","getCommits","repo","setRepoSelected","store","data","fail","error","getUser","state","console","log","getReposList","repos","github","getRepoSelected","selected","commits"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,mBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,sBAAzB;AACP,OAAO,MAAMC,aAAa,GAAG,iBAAtB;AACP,OAAO,MAAMC,gBAAgB,GAAG,oBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,sBAA3B;AACP,OAAO,MAAMC,eAAe,GAAG,mBAAxB;AAEP,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,QAAQ,EAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,MAAa;AACnBC,IAAAA,IAAI,EAAGT,cADY;AAEnBU,IAAAA,OAAO,EAAE;AAACF,MAAAA;AAAD;AAFU,GAAb,CADe;AAKzBG,EAAAA,UAAU,EAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,MAAa;AACtBH,IAAAA,IAAI,EAAGR,gBADe;AAEtBS,IAAAA,OAAO,EAAG;AAACE,MAAAA;AAAD;AAFY,GAAb,CALY;AASzBC,EAAAA,eAAe,EAAG,CAAC;AAACD,IAAAA;AAAD,GAAD,MAAW;AACzBH,IAAAA,IAAI,EAAGP,aADkB;AAEzBQ,IAAAA,OAAO,EAAG;AAACE,MAAAA;AAAD;AAFe,GAAX,CATO;AAazBE,EAAAA,KAAK,EAAEC,IAAI,KAAK;AACdN,IAAAA,IAAI,EAAEN,gBADQ;AAEdO,IAAAA,OAAO,EAAEK;AAFK,GAAL,CAbc;AAiBzBC,EAAAA,IAAI,EAAEC,KAAK,KAAK;AACdR,IAAAA,IAAI,EAAEJ,eADQ;AAEdK,IAAAA,OAAO,EAAEO;AAFK,GAAL;AAjBc,CAAtB;AAuBP,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA,QAClBX,IADkB,GACTW,KADS,CAClBX,IADkB;AAE1BY,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBb,IAAnB;AACA,SAAOA,IAAP;AACF;AAGF,OAAO,SAASc,YAAT,CAAsBH,KAAtB,EAA4B;AAAA,QACvBI,KADuB,GACbJ,KAAK,CAACK,MADO,CACvBD,KADuB;AAE/BH,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBE,KAApB;AACA,SAAOA,KAAP;AACH;AAED,OAAO,SAASE,eAAT,CAAyBN,KAAzB,EAA+B;AAAA,QAC1BO,QAD0B,GACbP,KAAK,CAACI,KADO,CAC1BG,QAD0B;AAElCN,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,QAA7B;AACA,SAAOA,QAAQ,CAACd,IAAhB;AACH;AAED,OAAO,SAASD,UAAT,CAAoBQ,KAApB,EAA0B;AAAA,QACrBQ,OADqB,GACTR,KADS,CACrBQ,OADqB;AAE7BP,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBM,OAAtB;AACA,SAAOA,OAAP;AACH","sourcesContent":["export const GET_USER_REPOS = '[USER REPOS] POST'\nexport const GET_USER_COMMITS = '[COMMITS REPOS] POST'\nexport const SELECTED_REPO = '[REPO] SELECTED'\nexport const STORE_USER_REPOS = '[USER REPOS] STORE'\nexport const SUCCESS_USER_REPOS = '[USER SUCESS] SUCESS'\nexport const FAIL_USER_REPOS = '[USER REPOS] FAIL'\n\nexport const githubActions = {\n    getRepos: ({user}) => ({\n        type : GET_USER_REPOS,\n        payload: {user}\n    }),\n    getCommits : ({repo}) => ({\n        type : GET_USER_COMMITS,\n        payload : {repo}\n    }),\n    setRepoSelected : ({repo})=>({\n        type : SELECTED_REPO,\n        payload : {repo}\n    }),\n    store: data => ({\n      type: STORE_USER_REPOS,\n      payload: data\n    }),\n    fail: error => ({\n      type: FAIL_USER_REPOS,\n      payload: error\n    }),\n  }\n\nexport function getUser(state){\n    const { user } = state;\n    console.log('user',user)\n    return user;\n }\n\n\nexport function getReposList(state){\n    const { repos } = state.github;\n    console.log('repos',repos)\n    return repos;\n}\n\nexport function getRepoSelected(state){\n    const { selected } = state.repos\n    console.log('selected repo', selected)\n    return selected.repo\n}\n\nexport function getCommits(state){\n    const { commits } = state\n    console.log('commits',commits)\n    return commits\n}"]},"metadata":{},"sourceType":"module"}