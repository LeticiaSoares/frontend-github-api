{"ast":null,"code":"var _jsxFileName = \"/Users/leticia.costa/WebstormProjects/frontend-github-api/src/App.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter } from 'react-router';\nimport SearchUser from './pages/seachUser';\nimport ListCommits from './pages/listCommits';\nimport Alert from './components/alert';\nimport { getAlertMessage } from './redux/selectors/alert';\nimport { alertActions } from './redux/actions/alert';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.message !== state.message) {\n      return {\n        message: props.message\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/:user/:repo/commits\",\n      component: ListCommits,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: SearchUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(Alert, {\n      message: this.state.message,\n      handleOnClick: this.props.closeAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.state.message));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  message: getAlertMessage(state);\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeAlert: () => dispatch(alertActions.closeAlert())\n  };\n};\n\nexport default withRouter(connect(() => mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/frontend-github-api/src/App.js"],"names":["React","connect","Route","Switch","withRouter","SearchUser","ListCommits","Alert","getAlertMessage","alertActions","App","Component","constructor","props","state","message","getDerivedStateFromProps","render","closeAlert","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,UAAvB,QAAwC,cAAxC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AAGH;;AACD,SAAOC,wBAAP,CAAiCH,KAAjC,EAAwCC,KAAxC,EAA+C;AAC3C,QAAID,KAAK,CAACE,OAAN,KAAkBD,KAAK,CAACC,OAA5B,EAAqC;AACjC,aAAO;AACHA,QAAAA,OAAO,EAAIF,KAAK,CAACE;AADd,OAAP;AAGH;;AACD,WAAO,EAAP;AACH;;AACDE,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,sBAAZ;AAAmC,MAAA,SAAS,EAAEX,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAED,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKS,KAAL,CAAWC,OAA3B;AAAoC,MAAA,aAAa,EAAE,KAAKF,KAAL,CAAWK,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4E,KAAKJ,KAAL,CAAWC,OAAvF,CALJ,CADJ;AASH;;AAzB4B;;AA4BjC,MAAMI,eAAe,GAAGL,KAAK,IAAI;AAACC,EAAAA,OAAO,EAAEP,eAAe,CAACM,KAAD,CAAf;AAAuB,CAAlE;;AAEA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHH,IAAAA,UAAU,EAAE,MAAMG,QAAQ,CAACZ,YAAY,CAACS,UAAb,EAAD;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAed,UAAU,CAACH,OAAO,CAAC,MAAMkB,eAAP,EAAwBC,kBAAxB,CAAP,CAAmDV,GAAnD,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Route, Switch, withRouter} from 'react-router'\nimport SearchUser from './pages/seachUser'\nimport ListCommits from './pages/listCommits'\nimport Alert from './components/alert'\nimport { getAlertMessage } from './redux/selectors/alert'\nimport { alertActions } from './redux/actions/alert'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            message : false,\n        }\n    }\n    static getDerivedStateFromProps (props, state) {\n        if (props.message !== state.message) {\n            return {\n                message :  props.message\n            }\n        }\n        return {}\n    }\n    render(){\n        return (\n            <React.Fragment>\n                <Switch>\n                    <Route path='/:user/:repo/commits' component={ListCommits} />\n                    <Route path='/' component={SearchUser} />\n                </Switch>\n                <Alert message={this.state.message} handleOnClick={this.props.closeAlert} >{this.state.message}</Alert>\n            </React.Fragment>\n       );\n    }\n}\n\nconst mapStateToProps = state => {message: getAlertMessage(state)}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        closeAlert: () => dispatch(alertActions.closeAlert())\n    }\n}\n\nexport default withRouter(connect(() => mapStateToProps, mapDispatchToProps)(App))\n\n\n"]},"metadata":{},"sourceType":"module"}