{"ast":null,"code":"export const GET_USER_REPOS = '[USER REPOS] POST';\nexport const GET_USER_COMMITS = '[COMMITS REPOS] POST';\nexport const SELECTED_REPO = '[REPO] SELECTED';\nexport const STORE_USER_REPOS = '[USER REPOS] STORE';\nexport const SUCCESS_USER_REPOS = '[USER SUCESS] SUCESS';\nexport const FAIL_USER_REPOS = '[USER REPOS] FAIL';\nexport const githubActions = {\n  getRepos: ({\n    user\n  }) => ({\n    type: GET_USER_REPOS,\n    payload: {\n      user\n    }\n  }),\n  getCommits: ({\n    repo\n  }) => ({\n    type: GET_USER_COMMITS,\n    payload: {\n      repo\n    }\n  }),\n  setRepoSelected: ({\n    repo\n  }) => ({\n    type: SELECTED_REPO,\n    payload: {\n      repo\n    }\n  }),\n  store: data => ({\n    type: STORE_USER_REPOS,\n    payload: data\n  }),\n  fail: error => ({\n    type: FAIL_USER_REPOS,\n    payload: error\n  })\n};","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/redux/actions/githubActions.js"],"names":["GET_USER_REPOS","GET_USER_COMMITS","SELECTED_REPO","STORE_USER_REPOS","SUCCESS_USER_REPOS","FAIL_USER_REPOS","githubActions","getRepos","user","type","payload","getCommits","repo","setRepoSelected","store","data","fail","error"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,mBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,sBAAzB;AACP,OAAO,MAAMC,aAAa,GAAG,iBAAtB;AACP,OAAO,MAAMC,gBAAgB,GAAG,oBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,sBAA3B;AACP,OAAO,MAAMC,eAAe,GAAG,mBAAxB;AAEP,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,QAAQ,EAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,MAAa;AACnBC,IAAAA,IAAI,EAAGT,cADY;AAEnBU,IAAAA,OAAO,EAAE;AAACF,MAAAA;AAAD;AAFU,GAAb,CADe;AAKzBG,EAAAA,UAAU,EAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,MAAa;AACtBH,IAAAA,IAAI,EAAGR,gBADe;AAEtBS,IAAAA,OAAO,EAAG;AAACE,MAAAA;AAAD;AAFY,GAAb,CALY;AASzBC,EAAAA,eAAe,EAAG,CAAC;AAACD,IAAAA;AAAD,GAAD,MAAW;AACzBH,IAAAA,IAAI,EAAGP,aADkB;AAEzBQ,IAAAA,OAAO,EAAG;AAACE,MAAAA;AAAD;AAFe,GAAX,CATO;AAazBE,EAAAA,KAAK,EAAEC,IAAI,KAAK;AACdN,IAAAA,IAAI,EAAEN,gBADQ;AAEdO,IAAAA,OAAO,EAAEK;AAFK,GAAL,CAbc;AAiBzBC,EAAAA,IAAI,EAAEC,KAAK,KAAK;AACdR,IAAAA,IAAI,EAAEJ,eADQ;AAEdK,IAAAA,OAAO,EAAEO;AAFK,GAAL;AAjBc,CAAtB","sourcesContent":["export const GET_USER_REPOS = '[USER REPOS] POST'\nexport const GET_USER_COMMITS = '[COMMITS REPOS] POST'\nexport const SELECTED_REPO = '[REPO] SELECTED'\nexport const STORE_USER_REPOS = '[USER REPOS] STORE'\nexport const SUCCESS_USER_REPOS = '[USER SUCESS] SUCESS'\nexport const FAIL_USER_REPOS = '[USER REPOS] FAIL'\n\nexport const githubActions = {\n    getRepos: ({user}) => ({\n        type : GET_USER_REPOS,\n        payload: {user}\n    }),\n    getCommits : ({repo}) => ({\n        type : GET_USER_COMMITS,\n        payload : {repo}\n    }),\n    setRepoSelected : ({repo})=>({\n        type : SELECTED_REPO,\n        payload : {repo}\n    }),\n    store: data => ({\n      type: STORE_USER_REPOS,\n      payload: data\n    }),\n    fail: error => ({\n      type: FAIL_USER_REPOS,\n      payload: error\n    }),\n  }\n"]},"metadata":{},"sourceType":"module"}