{"ast":null,"code":"var _jsxFileName = \"/Users/leticia.costa/WebstormProjects/github-api/src/pages/seachUser/seachUser.js\";\nimport React from 'react';\nimport { getUser, getReposList, githubActions } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nconst SearchUser = ({\n  user,\n  onGetRepos\n}) => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, \"Digite o usu\\xE1rio \", React.createElement(\"input\", {\n  type: \"text\",\n  value: user,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  onClick: onGetRepos,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Pesquisar\"), React.createElement(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"Reposit\\xF3rios\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}))), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"teste\"), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"#\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Ver commits\"))))));\n\nconst mapStateToProps = state => {\n  return {\n    repos: getReposList(state),\n    user: getUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetRepos: user => {\n      dispatch(githubActions(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchUser);","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/pages/seachUser/seachUser.js"],"names":["React","getUser","getReposList","githubActions","connect","SearchUser","user","onGetRepos","mapStateToProps","state","repos","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAgBC,YAAhB,EAA8BC,aAA9B,QAAkD,qBAAlD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KACf,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqB;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,KAAK,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADrB,EAEI;AAAQ,EAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAI;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAJ,CAFJ,CADA,CAPJ,CAHJ,CADJ;;AAqBA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAER,YAAY,CAACO,KAAD,CADhB;AAEHH,IAAAA,IAAI,EAAGL,OAAO,CAACQ,KAAD;AAFX,GAAP;AAIH,CALD;;AAMA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHL,IAAAA,UAAU,EAAED,IAAI,IAAI;AAChBM,MAAAA,QAAQ,CAACT,aAAa,CAACG,IAAD,CAAd,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAeF,OAAO,CAClBI,eADkB,EAElBG,kBAFkB,CAAP,CAGbN,UAHa,CAAf","sourcesContent":["import React from 'react'\nimport {getUser,getReposList, githubActions} from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst SearchUser = ({user,onGetRepos}) => (\n    <React.Fragment>\n        Digite o usuário <input type='text' value={user} />\n        <button onClick={onGetRepos}>Pesquisar</button>\n        <table>\n            <thead>\n            <tr>\n                <th>Repositórios</th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>teste</td>\n                <td><a href='#'>Ver commits</a></td>\n            </tr>\n            </tbody>\n        </table>\n    </React.Fragment>\n)\n\nconst mapStateToProps = state => {\n    return {\n        repos: getReposList(state),\n        user : getUser(state),\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetRepos: user => {\n            dispatch(githubActions(user))\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SearchUser)\n"]},"metadata":{},"sourceType":"module"}