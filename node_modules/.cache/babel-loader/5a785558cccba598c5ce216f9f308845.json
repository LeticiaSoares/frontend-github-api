{"ast":null,"code":"var _jsxFileName = \"/Users/leticia.costa/WebstormProjects/github-api/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { githubActions, getUser } from './redux/actions/github-actions';\nimport { startServer } from './infra/api-config';\nimport { startSagaRoot } from './redux';\nimport SearchUser from './pages/seachUser';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onGetRepos = () => {\n      this.props.onGetRepos(this.state.user);\n    };\n\n    this.state = {\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    startServer();\n    startSagaRoot();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(SearchUser, {\n      onGetRepos: this.onGetRepos,\n      user: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    repos: '',\n    user: getUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetRepos: user => {\n      dispatch(githubActions(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/App.js"],"names":["React","connect","githubActions","getUser","startServer","startSagaRoot","SearchUser","App","Component","constructor","props","onGetRepos","state","user","componentDidMount","render","mapStateToProps","repos","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,gCAAvC;AACA,SAASC,WAAT,QAA6B,oBAA7B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUlBC,UAVkB,GAUL,MAAK;AACd,WAAKD,KAAL,CAAWC,UAAX,CAAsB,KAAKC,KAAL,CAAWC,IAAjC;AACH,KAZiB;;AAEd,SAAKD,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AADE,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,WAAW;AACXC,IAAAA,aAAa;AAChB;;AAIDU,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,KAAKJ,UAA7B;AAA0C,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AApB4B;;AAsBjC,MAAMG,eAAe,GAAGJ,KAAK,IAAI;AAC7B,SAAO;AACHK,IAAAA,KAAK,EAAE,EADJ;AAEHJ,IAAAA,IAAI,EAAGV,OAAO,CAACS,KAAD;AAFX,GAAP;AAIH,CALD;;AAMA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHR,IAAAA,UAAU,EAAEE,IAAI,IAAI;AAChBM,MAAAA,QAAQ,CAACjB,aAAa,CAACW,IAAD,CAAd,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AASA,eAAeZ,OAAO,CAClBe,eADkB,EAElBE,kBAFkB,CAAP,CAGbX,GAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { githubActions, getUser } from './redux/actions/github-actions'\nimport { startServer  } from './infra/api-config'\nimport { startSagaRoot } from './redux'\nimport SearchUser from './pages/seachUser'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            user : ''\n        }\n    }\n    componentDidMount() {\n        startServer()\n        startSagaRoot()\n    }\n    onGetRepos = () =>{\n        this.props.onGetRepos(this.state.user)\n    }\n    render(){\n        return (\n            <React.Fragment>\n                <SearchUser onGetRepos={this.onGetRepos}  user={this.state.user} />\n            </React.Fragment>\n       );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        repos: '',\n        user : getUser(state),\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetRepos: user => {\n            dispatch(githubActions(user))\n        }\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n\n"]},"metadata":{},"sourceType":"module"}