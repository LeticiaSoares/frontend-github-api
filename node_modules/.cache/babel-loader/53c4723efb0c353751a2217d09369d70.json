{"ast":null,"code":"var _jsxFileName = \"/Users/leticia.costa/WebstormProjects/github-api/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport { connect } from 'react-redux';\nimport { githubActions } from './redux/actions/github-actions';\nimport { startServer } from './infra/api-config';\nimport { startSagaRoot } from './redux';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onGetRepos = () => {\n      this.props.onGetRepos(this.state.user);\n    };\n\n    this.state = {\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    startServer();\n    startSagaRoot();\n    console.log(\"aqui\"); //this.user = getUser()\n  }\n\n  render() {\n    const user = this.props.user;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    repos: ''\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetRepos: user => {\n      dispatch(githubActions(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/leticia.costa/WebstormProjects/github-api/src/App.js"],"names":["React","connect","githubActions","startServer","startSagaRoot","App","Component","constructor","props","onGetRepos","state","user","componentDidMount","console","log","render","mapStateToProps","repos","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,WAAT,QAA6B,oBAA7B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAYlBC,UAZkB,GAYL,MAAK;AACd,WAAKD,KAAL,CAAWC,UAAX,CAAsB,KAAKC,KAAL,CAAWC,IAAjC;AACH,KAdiB;;AAEd,SAAKD,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AADE,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,WAAW;AACXC,IAAAA,aAAa;AACbS,IAAAA,OAAO,CAACC,GAAR,SAHgB,CAIhB;AACH;;AAKDC,EAAAA,MAAM,GAAE;AAAA,UACIJ,IADJ,GACa,KAAKH,KADlB,CACIG,IADJ;AAEJ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAxB4B;;AA0BjC,MAAMK,eAAe,GAAGN,KAAK,IAAI;AAC7B,SAAO;AACHO,IAAAA,KAAK,EAAE;AADJ,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHV,IAAAA,UAAU,EAAEE,IAAI,IAAI;AAChBQ,MAAAA,QAAQ,CAACjB,aAAa,CAACS,IAAD,CAAd,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AASA,eAAeV,OAAO,CAClBe,eADkB,EAElBE,kBAFkB,CAAP,CAGbb,GAHa,CAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport { connect } from 'react-redux'\nimport { githubActions } from './redux/actions/github-actions'\nimport { startServer  } from './infra/api-config'\nimport { startSagaRoot } from './redux'\nimport './App.css';\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            user : ''\n        }\n    }\n    componentDidMount() {\n        startServer()\n        startSagaRoot()\n        console.log(`aqui`)\n        //this.user = getUser()\n    }\n    onGetRepos = () =>{\n        this.props.onGetRepos(this.state.user)\n    }\n\n    render(){\n        const { user } = this.props;\n        return (\n            <React.Fragment>\n\n            </React.Fragment>\n       );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        repos: ''\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetRepos: user => {\n            dispatch(githubActions(user))\n        }\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n\n"]},"metadata":{},"sourceType":"module"}